<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ainWindow</class>
 <widget class="QMainWindow" name="ainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1500</width>
    <height>1000</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
    background-color: #183747; /* Background color */
 
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QWidget" name="graph_one_channaks" native="true">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>10</y>
      <width>311</width>
      <height>461</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #0f2834; /* Background color */
    border-radius: 15px; /* Curved borders */
    border: 2px solid #0f2834; /* 3D outline */
 
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7); /* 3D shadow effect */
}



</string>
    </property>
    <widget class="QPushButton" name="pushButton_2">
     <property name="geometry">
      <rect>
       <x>70</x>
       <y>410</y>
       <width>151</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #235d79;    /* Blue color */
    border-radius: 10px;          /* Rounded corners */
    border: none;                 /* No border */
    color: white;                 /* Text color */
    padding: 5px 15px;            /* Padding for better text alignment */
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QPushButton:hover {
    background-color: #2e6d8e;    /* Slightly lighter blue when hovering */
}

QPushButton:pressed {
    background-color: #1b4b61;    /* Darker blue when pressed */
}


</string>
     </property>
     <property name="text">
      <string>Upload File</string>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="graph_two_channals" native="true">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>500</y>
      <width>311</width>
      <height>471</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #0f2834; /* Background color */
    border-radius: 15px; /* Curved borders */
    border: 2px solid #0f2834; /* 3D outline */
    
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7); /* 3D shadow effect */
}</string>
    </property>
    <widget class="QPushButton" name="pushButton_3">
     <property name="geometry">
      <rect>
       <x>70</x>
       <y>420</y>
       <width>151</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #235d79;    /* Blue color */
    border-radius: 10px;          /* Rounded corners */
    border: none;                 /* No border */
    color: white;                 /* Text color */
    padding: 5px 15px;            /* Padding for better text alignment */
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QPushButton:hover {
    background-color: #2e6d8e;    /* Slightly lighter blue when hovering */
}

QPushButton:pressed {
    background-color: #1b4b61;    /* Darker blue when pressed */
}


</string>
     </property>
     <property name="text">
      <string>Upload File</string>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="tools" native="true">
    <property name="geometry">
     <rect>
      <x>1270</x>
      <y>10</y>
      <width>221</width>
      <height>961</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #0f2834; /* Background color */
    border-radius: 15px; /* Curved borders */
    border: 2px solid #0f2834; /* 3D outline */

    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7); /* 3D shadow effect */
}</string>
    </property>
    <widget class="QFrame" name="frame">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>40</y>
       <width>201</width>
       <height>104</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">gridline-color: rgb(255, 85, 0);
selection-color: rgb(255, 85, 0);</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::HLine</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Plain</enum>
     </property>
     <property name="lineWidth">
      <number>2</number>
     </property>
     <property name="midLineWidth">
      <number>2</number>
     </property>
     <widget class="QComboBox" name="comboBox">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>181</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: #235d79;   /* Background color for the combo box */
    border: 1px solid #1b4b61;   /* Border around the combo box */
    border-radius: 10px;         /* Rounded corners */
    padding: 5px 15px;           /* Padding around the text */
    color: white;                /* Text color */
     font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QComboBox:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QComboBox:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 25px;                 /* Width of the drop-down button */
    border-left: 1px solid #1b4b61; /* Border separating the drop-down arrow */
    background-color: #235d79;   /* Same background color for drop-down */
    border-top-right-radius: 10px; /* Rounded top right */
    border-bottom-right-radius: 10px; /* Rounded bottom right */
}

QComboBox::down-arrow {
    width: 10px;                 /* Size of the arrow */
    height: 10px;                /* Size of the arrow */
    image: none;                 /* Use default arrow */
}

QComboBox QAbstractItemView {
    background-color: #E0E0E0;   /* Background color for the list */
    border: 1px solid #235d79;   /* Border for the list */
    selection-background-color: #235d79; /* Selection color when an item is highlighted */
    color: black;                /* Text color for the items */
}

QComboBox::item:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering over an item */
}

QComboBox::item:selected {
    background-color: #1b4b61;   /* Darker blue when an item is selected */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>New Item</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>New Item</string>
       </property>
      </item>
     </widget>
    </widget>
    <widget class="QPushButton" name="pushButton">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>350</y>
       <width>151</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #235d79;    /* Blue color */
    border-radius: 10px;          /* Rounded corners */
    border: none;                 /* No border */
    color: white;                 /* Text color */
    padding: 5px 15px;            /* Padding for better text alignment */
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QPushButton:hover {
    background-color: #2e6d8e;    /* Slightly lighter blue when hovering */
}

QPushButton:pressed {
    background-color: #1b4b61;    /* Darker blue when pressed */
}


</string>
     </property>
     <property name="text">
      <string>Pause </string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_6">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>280</y>
       <width>151</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
    background-color: #235d79;    /* Blue color */
    border-radius: 10px;          /* Rounded corners */
    border: none;                 /* No border */
    color: white;                 /* Text color */
    padding: 5px 15px;            /* Padding for better text alignment */
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QPushButton:hover {
    background-color: #2e6d8e;    /* Slightly lighter blue when hovering */
}

QPushButton:pressed {
    background-color: #1b4b61;    /* Darker blue when pressed */
}


</string>
     </property>
     <property name="text">
      <string>rewind</string>
     </property>
    </widget>
    <widget class="QPushButton" name="color_push_button">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>220</y>
       <width>151</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">
QPushButton {
    background-color: #235d79;    /* Blue color */
    border-radius: 10px;          /* Rounded corners */
    border: none;                 /* No border */
    color: white;                 /* Text color */
    padding: 5px 15px;            /* Padding for better text alignment */
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QPushButton:hover {
    background-color: #2e6d8e;    /* Slightly lighter blue when hovering */
}

QPushButton:pressed {
    background-color: #1b4b61;    /* Darker blue when pressed */
}


</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QLabel" name="label">
     <property name="geometry">
      <rect>
       <x>43</x>
       <y>430</y>
       <width>121</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color:rgb(255, 255, 255);
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */



</string>
     </property>
     <property name="text">
      <string>Zoom</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_2">
     <property name="geometry">
      <rect>
       <x>60</x>
       <y>510</y>
       <width>104</width>
       <height>16</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color:rgb(255, 255, 255);
    
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */</string>
     </property>
     <property name="text">
      <string>Speed</string>
     </property>
    </widget>
    <widget class="QCheckBox" name="checkBox">
     <property name="geometry">
      <rect>
       <x>50</x>
       <y>140</y>
       <width>121</width>
       <height>51</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QCheckBox {
    color: white;                  /* Text color */
    font-family: Arial, Helvetica, sans-serif;  /* Font family */
    font-size: 14px;              /* Font size */
    font-weight: bold;            /* Bold text */
    letter-spacing: 1px;          /* Spacing between letters */
    text-transform: uppercase;    /* Uppercase letters */
}

QCheckBox::indicator {
    width: 20px;                  /* Size of the checkbox */
    height: 20px;
    background-color: #235d79;   /* Background color for the checkbox */
    border: 2px solid #1b4b61;   /* Border color for the checkbox */
    border-radius: 4px;          /* Rounded corners */
}

QCheckBox::indicator:checked {
    background-color: #1b4b61;   /* Background color when checked */
    border: 2px solid #FFC300;   /* Border color when checked */
}

QCheckBox::indicator:unchecked {
    background-color: #235d79;   /* Background color when unchecked */
    border: 2px solid #1b4b61;   /* Border color when unchecked */
}

QCheckBox::indicator:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering over the checkbox indicator */
}

QCheckBox::indicator:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QCheckBox:hover {
    color: white;                /* Keep the text color white on hover */
}
</string>
     </property>
     <property name="text">
      <string>Linked</string>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>460</y>
       <width>160</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #235d79;   /* Border around the groove */
    height: 8px;                 /* Groove height */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:horizontal {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: -5px 0;              /* Centers the handle over the groove */
}

QSlider::handle:horizontal:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:horizontal:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:horizontal {
    background: #235d79;         /* Color of the filled area before the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:horizontal {
    background: #E0E0E0;         /* Color of the empty
}</string>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider_2">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>550</y>
       <width>160</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #235d79;   /* Border around the groove */
    height: 8px;                 /* Groove height */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:horizontal {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: -5px 0;              /* Centers the handle over the groove */
}

QSlider::handle:horizontal:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:horizontal:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:horizontal {
    background: #235d79;         /* Color of the filled area before the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:horizontal {
    background: #E0E0E0;         /* Color of the empty
}</string>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="Graph1" native="true">
    <property name="geometry">
     <rect>
      <x>340</x>
      <y>10</y>
      <width>921</width>
      <height>461</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #0f2834; /* Background color */
    border-radius: 15px; /* Curved borders */
    border: 2px solid #183747; /* Matching the background color */
    min-width: 10px; /* Ensures it's square */
    min-height: 10px; /* Ensures it's square */
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7); /* 3D shadow effect */
}</string>
    </property>
    <widget class="QSlider" name="horizontalSlider_3">
     <property name="geometry">
      <rect>
       <x>50</x>
       <y>430</y>
       <width>851</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #235d79;   /* Border around the groove */
    height: 8px;                 /* Groove height */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:horizontal {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: -5px 0;              /* Centers the handle over the groove */
}

QSlider::handle:horizontal:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:horizontal:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:horizontal {
    background: #235d79;         /* Color of the filled area before the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:horizontal {
    background: #E0E0E0;         /* Color of the empty
}</string>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
    <widget class="QSlider" name="verticalSlider">
     <property name="geometry">
      <rect>
       <x>890</x>
       <y>30</y>
       <width>22</width>
       <height>361</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:vertical {
    border: 1px solid #235d79;   /* Border around the groove */
    width: 8px;                  /* Groove width (vertical) */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:vertical {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: 0 -5px;              /* Centers the handle over the groove */
}

QSlider::handle:vertical:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:vertical:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:vertical {
    background: #235d79;         /* Color of the filled area above the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:vertical {
    background: #E0E0E0;         /* Color of the empty area below the handle */
    border-radius: 4px;          /* Rounded edges for the add-page */
}
</string>
     </property>
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="Graph2" native="true">
    <property name="geometry">
     <rect>
      <x>340</x>
      <y>500</y>
      <width>921</width>
      <height>471</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget {
    background-color: #0f2834; /* Background color */
    border-radius: 15px; /* Curved borders */
    border: 2px solid #0f2834; /* 3D outline */
  
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7); /* 3D shadow effect */
}</string>
    </property>
    <widget class="QSlider" name="verticalSlider_2">
     <property name="geometry">
      <rect>
       <x>890</x>
       <y>60</y>
       <width>22</width>
       <height>341</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:vertical {
    border: 1px solid #235d79;   /* Border around the groove */
    width: 8px;                  /* Groove width (vertical) */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:vertical {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: 0 -5px;              /* Centers the handle over the groove */
}

QSlider::handle:vertical:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:vertical:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:vertical {
    background: #235d79;         /* Color of the filled area above the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:vertical {
    background: #E0E0E0;         /* Color of the empty area below the handle */
    border-radius: 4px;          /* Rounded edges for the add-page */
}
</string>
     </property>
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
    </widget>
    <widget class="QSlider" name="horizontalSlider_4">
     <property name="geometry">
      <rect>
       <x>40</x>
       <y>440</y>
       <width>851</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #235d79;   /* Border around the groove */
    height: 8px;                 /* Groove height */
    background: #E0E0E0;         /* Groove background color */
    border-radius: 4px;          /* Rounded groove edges */
}

QSlider::handle:horizontal {
    background-color: #235d79;   /* Handle color */
    border: 1px solid #1b4b61;   /* Border for handle (darker shade) */
    width: 18px;                 /* Handle width */
    height: 18px;                /* Handle height */
    border-radius: 9px;          /* Rounded handle */
    margin: -5px 0;              /* Centers the handle over the groove */
}

QSlider::handle:horizontal:hover {
    background-color: #2e6d8e;   /* Lighter blue when hovering */
}

QSlider::handle:horizontal:pressed {
    background-color: #1b4b61;   /* Darker blue when pressed */
}

QSlider::sub-page:horizontal {
    background: #235d79;         /* Color of the filled area before the handle */
    border-radius: 4px;          /* Rounded edges for the sub-page */
}

QSlider::add-page:horizontal {
    background: #E0E0E0;         /* Color of the empty
}</string>
     </property>
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
    </widget>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1500</width>
     <height>26</height>
    </rect>
   </property>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
